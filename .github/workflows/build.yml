name: Build and Release

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x

    - name: Set Version
      if: startsWith(github.ref, 'refs/tags/')
      shell: pwsh
      run: |
        $tag = "${{ github.ref }}".Replace('refs/tags/v', '')
        echo "VERSION=$tag" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Generate Release Notes
      if: startsWith(github.ref, 'refs/tags/')
      id: release_notes
      shell: pwsh
      run: |
        $lastTag = $(git describe --tags --abbrev=0 "HEAD^" 2>$null) ?? "HEAD~10"
        
        # Get commit history and categorize changes
        $commits = git log --pretty=format:"- %s%n%b" "$lastTag..HEAD"
        
        $features = $commits | Where-Object { $_ -match '^- feat|add|enhance|improve' }
        $fixes = $commits | Where-Object { $_ -match '^- fix|bug|patch|resolve' }
        $docs = $commits | Where-Object { $_ -match '^- docs|documentation|comment' }
        $other = $commits | Where-Object { 
          $_ -notmatch '^- feat|add|enhance|improve' -and 
          $_ -notmatch '^- fix|bug|patch|resolve' -and 
          $_ -notmatch '^- docs|documentation|comment' -and
          $_ -match '^-'
        }

        # Format release notes
        $notes = @"
        ## What's Changed

        ### üöÄ New Features
        $($features -join "`n")

        ### üêõ Fixes
        $($fixes -join "`n")

        ### üìö Documentation
        $($docs -join "`n")

        ### üîß Other Changes
        $($other -join "`n")

        ---
        For transparency and security:
        - This is an open-source fork focused on code clarity and transparency
        - You can review the complete source code in this repository
        - All changes are documented and visible in the commit history
        "@

        $notes = $notes.Replace('"','\"').Replace('\','\\')
        echo "RELEASE_NOTES<<EOF" >> $env:GITHUB_ENV
        echo "$notes" >> $env:GITHUB_ENV
        echo "EOF" >> $env:GITHUB_ENV

    - name: Generate Documentation
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        # Create docs folder if it doesn't exist
        New-Item -ItemType Directory -Force -Path docs
        
        # Generate simple documentation of public methods and classes
        Get-ChildItem -Recurse -Filter *.cs | 
        Where-Object { $_.FullName -notmatch 'obj|bin' } |
        ForEach-Object {
          $filename = $_.BaseName
          $content = Get-Content $_.FullName -Raw
          $namespace = if($content -match 'namespace\s+([^\s{]+)') { $matches[1] } else { "Unknown" }
          $classMatch = $content -match 'public\s+(?:class|interface|enum)\s+([^\s:{]+)'
          $className = if($classMatch) { $matches[1] } else { "Unknown" }
          
          Add-Content -Path "docs/$filename.md" @"
          # $filename

          Namespace: $namespace
          Class: $className

          ## Purpose
          This file is part of the transparent, open-source fork of the League Account Manager.
          All functionality is clearly documented and visible for user review.
          "@
        }

    - name: Publish
      run: |
        dotnet publish League_Account_Manager/League_Account_Manager.csproj `
          -c Release `
          --self-contained true `
          -r win-x64 `
          /p:PublishSingleFile=true `
          /p:Version=${{ env.VERSION || '1.0.0-dev' }} `
          /p:AssemblyVersion=${{ env.VERSION || '1.0.0-dev' }} `
          /p:FileVersion=${{ env.VERSION || '1.0.0-dev' }}

    - name: Zip Release Files
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        Compress-Archive -Path League_Account_Manager/bin/Release/net7.0-Windows/win-x64/publish/* -DestinationPath Release.zip
        Compress-Archive -Path docs/* -DestinationPath Documentation.zip

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Release.zip
          Documentation.zip
        name: "Release ${{ env.VERSION }} - Transparent Fork"
        body: |
          This is a transparent, security-focused fork of the League Account Manager.
          
          ${{ env.RELEASE_NOTES }}
          
          ## üîç Transparency
          - All source code is visible and documented
          - No obfuscation or hidden functionality
          - Documentation included in release
          
          ## üì¶ Release Files
          - `Release.zip`: Contains the application
          - `Documentation.zip`: Contains documentation of public methods and classes
          
          ## ‚ö†Ô∏è Note
          Always review the source code for any application that interacts with your League account.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
